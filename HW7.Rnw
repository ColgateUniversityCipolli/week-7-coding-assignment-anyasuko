\documentclass{article}
\usepackage[margin=1.0in]{geometry} % To set margins
\usepackage{amsmath}  % This allows me to use the align functionality.
                      % If you find yourself trying to replicate
                      % something you found online, ensure you're
                      % loading the necessary packages!
\usepackage{amsfonts} % Math font
\usepackage{fancyvrb}
\usepackage{hyperref} % For including hyperlinks
\usepackage[shortlabels]{enumitem}% For enumerated lists with labels specified
                                  % We had to run tlmgr_install("enumitem") in R
\usepackage{float}    % For telling R where to put a table/figure
\usepackage{natbib}        %For the bibliography
\bibliographystyle{apalike}%For the bibliography

\begin{document}
  \begin{enumerate}
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Question 1
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    \item Write a \texttt{pois.prob()} function that computes $P(X=x)$, 
    $P(X \neq x)$, $P(X<x)$, $P(X \leq x)$, $P(X > x)$, and $P(X \geq x).$ Enable the user to specify the rate parameter $\lambda$.
<<size="scriptsize">>=
pois.prob <- function(x, size, lambda, type="<="){
  # Use dpois and ppois to conditionally return the correct probability
  #dpois is for PMF
  #ppois is for CDF 
  
  #cdf of anything negative should just be zero
  if (x-1 < 0){
    sub <- 0
  }
  else{
    sub=lambda-1
  }
  
  #prob that x=__ is just the pmf(__)
  equal <- dpois(x,lambda)
  #prob that x!=__ is 1-pmf(__)
  not.equal <- 1- dpois(x,lambda)
  #prob that x<__ is cdf(__ - 1)
  less <- ppois(sub,lambda,TRUE)
  #prob that x <= __ is cdf(__)
  less.or.equal <- ppois(x,lambda,TRUE)
  #prob that x> __ is 1-cdf(__)
  greater <- 1- ppois(x,lambda,TRUE)
  #prob that x>= __ is 1-cdf(__-1)
  greater.or.equal <- 1-ppois(sub,lambda,TRUE)
  
  to.return <- data.frame(c("Equal", "Not Equal", "Less Than", "Less than or Equal to",
                            "Greater Than", "Greater Than or Equal to"),
                          c(equal,not.equal,less,less.or.equal,greater,greater.or.equal))
  return(to.return)
}
@
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Question 2
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    \item Write a \texttt{beta.prob()} function that computes $P(X=x)$, 
    $P(X \neq x)$, $P(X<x)$, $P(X \leq x)$, $P(X > x)$, and $P(X \geq x)$
    for a beta distribution. Enable the user to specify the shape parameters
    $\alpha$ and $\beta$.
<<size="scriptsize">>=
beta.prob <- function(x, size, alpha, beta, type="<="){
  # Use dbeta and pbeta to conditionally return the correct probability
  #dbeta is for PMF
  #pbeta is for CDF
  
  #prob that x=__ is just 0
  equal <-0
  #prob that x!=__ is 1
  not.equal <- 1
  #prob that x<__ is cdf(__)
  less <- pbeta(x,alpha,beta)
  #prob that x <= __ is cdf(__)
  less.or.equal <- pbeta(x,alpha,beta)
  #prob that x> __ is 1-cdf(__)
  greater <- 1- pbeta(x,alpha,beta)
  #prob that x>= __ is 1-cdf(__)
  greater.or.equal <- 1-pbeta(x,alpha,beta)
  
  to.return <- data.frame(c("Equal", "Not Equal", "Less Than", "Less than or Equal to",
                            "Greater Than", "Greater Than or Equal to"),
                          c(equal,not.equal,less,less.or.equal,greater,greater.or.equal))
  return(to.return)

}
@
\end{enumerate}
\bibliography{bibliography}
\end{document}
